Ques.1 LIst out the features of HTML 5
HTML5 introduced several new features and enhancements to make web development more efficient and powerful. Here’s a summary of its key features:

1. New Semantic Elements
Introduced elements like <header>, <footer>, <article>, <section>, <nav>, and <aside> for better content structure and accessibility.
2. Multimedia Support
Audio and Video Tags: Native support for embedding multimedia with <audio> and <video> tags without requiring external plugins like Flash.
3. Canvas Element
The <canvas> element allows for rendering graphics and animations directly on the webpage using JavaScript.
4. Improved Form Elements
New input types like date, email, number, range, color, and more.
New attributes like placeholder, autofocus, required, and pattern for better form validation and user experience.
5. APIs and Interactivity
Geolocation API: Provides location-based services.
Web Storage: LocalStorage and SessionStorage for storing data on the client side.
Web Workers: Enables running scripts in the background without affecting page performance.
Drag and Drop: Native support for drag-and-drop operations.
6. Better Accessibility and Compatibility
Improved accessibility with ARIA (Accessible Rich Internet Applications) roles.
Compatibility with older versions of HTML and graceful degradation.
7. Offline Capabilities
Application Cache and Service Workers allow web apps to work offline and load faster.
8. SVG and MathML Support
Direct support for scalable vector graphics (SVG) and mathematical notations (MathML) within the HTML5 markup.
9. Responsive Design and Mobile-Friendly
Improved support for responsive web design with features like the <meta> viewport element and media queries.
10. Cleaner and More Efficient Code
Reduced dependency on external plugins and libraries.
Better code readability with less boilerplate code.
These features collectively made HTML5 a major step forward in web development, enhancing the user experience while giving developers more powerful tools



2. What are HTML Entities? List out 5 commonly used HTML entities
HTML entities are special codes used to display reserved characters in HTML that would otherwise be interpreted as part of the HTML code. They can also be used to represent characters that are not readily available on the keyboard. HTML entities start with an ampersand (&) and end with a semicolon (;).

5 Commonly Used HTML Entities
&lt; - Represents the less-than symbol (<).
&gt; - Represents the greater-than symbol (>).
&amp; - Represents the ampersand symbol (&).
&quot; - Represents a double quotation mark (").
&nbsp; - Represents a non-breaking space (a space that prevents line breaks).
These entities ensure that reserved characters are properly displayed in the browser rather than being interpreted as HTML code.


3.Define accessibility in the context of web development. Discuss why it's essential to create accessible websites and how it benefits different user groups
Web accessibility refers to the practice of designing and developing websites, tools, and technologies so that people with disabilities can use them effectively. It includes ensuring that websites can be accessed and navigated by users with varying abilities, including those with visual, auditory, motor, or cognitive impairments.

Why is Accessibility Essential?
Inclusivity: Accessibility ensures that people with disabilities can access information and services, promoting equal opportunity and inclusiveness.

Legal Compliance: Many countries have laws (like the Americans with Disabilities Act (ADA) in the US or the Web Content Accessibility Guidelines (WCAG) globally) that require websites to be accessible.

Improved User Experience: Accessible design often leads to a better overall user experience for all users, including those without disabilities, by improving usability and navigation.

Wider Audience Reach: By making your website accessible, you cater to a broader audience, increasing potential traffic and engagement.

SEO Benefits: Accessibility features like proper use of alt text and semantic HTML can also improve search engine optimization (SEO), as search engines favor well-structured content.

Social Responsibility: Creating accessible websites aligns with ethical principles, showing a commitment to social responsibility by ensuring that everyone has equal access to information and services.

How Accessibility Benefits Different User Groups
People with Visual Impairments:

Screen Readers: Text alternatives (like alt text for images) and proper HTML structure help screen readers interpret content for visually impaired users.
High Contrast and Resizable Text: These features assist users with low vision in reading and navigating the website.
People with Hearing Impairments:

Captions and Transcripts: Providing captions for video content and transcripts for audio content ensures that users with hearing loss can access the information.
People with Motor Disabilities:

Keyboard Navigation: Accessible websites allow full navigation using only a keyboard, which benefits users who cannot use a mouse.
Large Clickable Areas: Well-designed buttons and links improve accessibility for users with limited dexterity.
People with Cognitive Disabilities:

Simple Language and Clear Layouts: Using plain language, consistent navigation, and clear layouts makes content easier to understand.
Avoiding Flashes and Distractions: Reducing animations and avoiding flickering content helps users with cognitive conditions focus better.
Older Users:

Enhanced Readability and Larger Click Targets: Accessibility features like adjustable text sizes, readable fonts, and simple navigation benefit older users with age-related challenges.
By prioritizing accessibility, developers create websites that are usable for everyone, regardless of their abilities, making the web more inclusive and equitable.

4. List any 3 ways which help us in improving the accessibility of HTML
Improving the accessibility of HTML is crucial for creating an inclusive web experience. Here are three ways to enhance accessibility in HTML:

1. Use Semantic HTML Elements
Use elements like <header>, <nav>, <main>, <section>, and <footer> to structure your content meaningfully. Semantic HTML provides context to assistive technologies like screen readers, allowing them to convey the purpose of each section to users more effectively.
For example, instead of using a <div> for navigation, use a <nav> element.
2. Provide Text Alternatives (Alt Text) for Images
Always include descriptive alt attributes for images, especially for critical visual content. This helps visually impaired users understand the content of the images when using screen readers.
Example: <img src="example.jpg" alt="A person riding a bicycle in a park">
3. Ensure Keyboard Navigation
Design your website so that all interactive elements (links, buttons, forms) can be accessed and operated using only the keyboard. This is crucial for users with motor disabilities who rely on keyboard navigation.
Use appropriate focus states, avoid keyboard traps, and ensure that the tab order follows a logical sequence for smooth navigation.
Implementing these practices greatly improves the accessibility of your HTML content, making it more usable for everyone, regardless of their abilities.
